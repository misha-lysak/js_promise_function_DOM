{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","someEvent","type","nodeName","id","printMessage","message","notification","document","createElement","innerText","classList","add","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,SAACK,GAC/BL,IAAcK,EAAUC,MAI5BJ,EACE,UAAUF,OAAAA,EACHD,qBAAAA,GAAAA,OAAAA,EAAQQ,SAAiBR,UAAAA,OAAAA,EAAQS,GAFnC,UAQb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAeC,SAASC,cAAc,OAE5CF,EAAaG,UAAYJ,EACzBC,EAAaI,UAAUC,IAAI,WAE3BJ,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACftB,QAAAA,EACAW,aAAAA","file":"main.9a93d443.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, (someEvent) => {\n      if (eventName !== someEvent.type) {\n        return;\n      }\n\n      resolve(\n        `It was ${eventName} on the element: `\n          + `${element.nodeName}, id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.innerText = message;\n  notification.classList.add('message');\n\n  document.body.append(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}